{"pageProps":{"mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"スニペットを登録する\",\n      children: \"スニペットを登録する\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"早速ページの実装、と行きたいところですが、\\n先にスニペットのデータの登録を行いたいと思います。\"\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"dataフォルダにsnippetsフォルダを追加する\",\n      children: [_jsx(_components.code, {\n        children: \"data\"\n      }), \"フォルダに\", _jsx(_components.code, {\n        children: \"snippets\"\n      }), \"フォルダを追加する\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"このプロジェクトのデータ(MDX ファイル)の保管先は\", _jsx(_components.code, {\n        children: \"data\"\n      }), \"フォルダです。\\n\", _jsx(_components.code, {\n        children: \"data\"\n      }), \"フォルダ直下には\", _jsx(_components.code, {\n        children: \"blog\"\n      }), \"・\", _jsx(_components.code, {\n        children: \"docs\"\n      }), \"フォルダがありますが、ここに\", _jsx(_components.code, {\n        children: \"snippets\"\n      }), \"フォルダを追加します。\"]\n    }), \"\\n\", _jsxs(_components.h2, {\n      id: \"snippetsフォルダに-mdx-ファイルを追加する\",\n      children: [_jsx(_components.code, {\n        children: \"snippets\"\n      }), \"フォルダに MDX ファイルを追加する\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.code, {\n        children: \"snippets\"\n      }), \"フォルダを作成したら、適当なスニペットが書かれた\\nMDX ファイルを追加してみましょう。\\n次の\", _jsx(_components.code, {\n        children: \"component.mdx\"\n      }), \"ファイルを\", _jsx(_components.code, {\n        children: \"snippets\"\n      }), \"配下に作成してください。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-md:data/snippets/component.mdx\",\n        children: \"# React Component\\n\\n```tsx\\ntype Props = {};\\n\\nexport const Component = (props: Props) => {\\n    return <></>;\\n};\\n```\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"まとめ\",\n      children: \"まとめ\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"ここでは、\", _jsx(_components.code, {\n        children: \"data\"\n      }), \"フォルダに\", _jsx(_components.code, {\n        children: \"snippets\"\n      }), \"フォルダを追加し、\\n最初のスニペット\", _jsx(_components.code, {\n        children: \"component.mdx\"\n      }), \"を登録しました。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"次に行うことは、今回作成した\", _jsx(_components.code, {\n        children: \"component.mdx\"\n      }), \"を\\nサイトのページに反映させることです。\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}